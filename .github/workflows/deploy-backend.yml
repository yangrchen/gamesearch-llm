name: Deploy Backend to ECS

on:
    push:
        branches: [main]
        paths:
            - "backend/**"
    pull_request:
        branches: [main]
        paths:
            - "backend/**"
    workflow_dispatch:

env:
    AWS_REGION: us-east-1
    ECR_REPOSITORY: gamesearch-backend
    ECS_SERVICE: gamesearch-backend
    ECS_CLUSTER: gamesearch-cluster
    CONTAINER_NAME: gamesearch-backend

permissions:
    contents: read

jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        environment: production

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                  cd backend
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                  echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

            - name: Download current task definition
              run: |
                  aws ecs describe-task-definition \
                  --task-definition ${{ env.ECS_SERVICE }} \
                  --query 'taskDefinition' \
                  --output json > task-definition-raw.json

                  jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .placementConstraints, .compatibilities, .registeredAt, .registeredBy)' \
                  task-definition-raw.json > task-definition.json

            - name: Fill in new image ID in the Amazon ECS task definition
              id: task-def
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                  task-definition: task-definition.json
                  container-name: ${{ env.CONTAINER_NAME }}
                  image: ${{ steps.build-image.outputs.image }}

            - name: Deploy Amazon ECS task definition
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                  task-definition: ${{ steps.task-def.outputs.task-definition }}
                  service: ${{ env.ECS_SERVICE }}
                  cluster: ${{ env.ECS_CLUSTER }}
                  wait-for-service-stability: true

            - name: Scale ECS service to 1 task
              run: |
                  aws ecs update-service \
                  --cluster ${{ env.ECS_CLUSTER }} \
                  --service ${{ env.ECS_SERVICE }} \
                  --desired-count 3

                  aws ecs wait services-stable \
                  --cluster ${{ env.ECS_CLUSTER }} \
                  --services ${{ env.ECS_SERVICE }}
